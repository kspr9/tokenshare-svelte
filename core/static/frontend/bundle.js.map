{"version":3,"file":"bundle.js","sources":["../../../frontend-svelte/node_modules/svelte/src/runtime/internal/utils.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/environment.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/loop.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/dom.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/style_manager.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/lifecycle.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/scheduler.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/transitions.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/await_block.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/each.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/spread.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/Component.js","../../../frontend-svelte/node_modules/svelte/src/shared/version.js","../../../frontend-svelte/node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../../frontend-svelte/node_modules/svelte-routing/src/contexts.js","../../../frontend-svelte/node_modules/svelte-routing/src/utils.js","../../../frontend-svelte/node_modules/svelte-routing/src/Link.svelte","../../../frontend-svelte/node_modules/svelte-routing/src/Route.svelte","../../../frontend-svelte/node_modules/svelte/src/runtime/store/index.js","../../../frontend-svelte/node_modules/svelte-routing/src/history.js","../../../frontend-svelte/node_modules/svelte-routing/src/Router.svelte","../../../frontend-svelte/src/stores/isAuthenticatedStore.js","../../../frontend-svelte/src/components/Navbar.svelte","../../../frontend-svelte/src/components/Header.svelte","../../../frontend-svelte/src/components/Sidebar.svelte","../../../frontend-svelte/src/content/Profile.svelte","../../../frontend-svelte/src/stores/userDataStore.ts","../../../frontend-svelte/src/lib/Counter.svelte","../../../frontend-svelte/src/content/Dashboard.svelte","../../../frontend-svelte/src/content/Workspaces.svelte","../../../frontend-svelte/src/components/MsgInMailbox.svelte","../../../frontend-svelte/src/components/ComposeMsg.svelte","../../../frontend-svelte/src/content/Messages.svelte","../../../frontend-svelte/src/content/Settings.svelte","../../../frontend-svelte/src/content/NoSignInIndex.svelte","../../../frontend-svelte/src/components/Footer.svelte","../../../frontend-svelte/src/content/Login.svelte","../../../frontend-svelte/src/content/Register.svelte","../../../frontend-svelte/src/App.svelte","../../../frontend-svelte/src/main.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.2';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import { getContext } from \"svelte\";\n\nexport const LOCATION = {};\nexport const ROUTER = {};\nexport const HISTORY = {};\n\nexport const useLocation = () => getContext(LOCATION);\nexport const useRouter = () => getContext(ROUTER);\nexport const useHistory = () => getContext(HISTORY);\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nconst PARAM = /^:(.+)/;\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Split up the URI into segments delimited by `/`\n * Strip starting/ending `/`\n * @param {string} uri\n * @return {string[]}\n */\nconst segmentize = (uri) => uri.replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} string\n * @return {string}\n */\nconst stripSlashes = (string) => string.replace(/(^\\/+|\\/+$)/g, \"\");\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nconst rankRoute = (route, index) => {\n    const score = route.default\n        ? 0\n        : segmentize(route.path).reduce((score, segment) => {\n              score += SEGMENT_POINTS;\n\n              if (segment === \"\") {\n                  score += ROOT_POINTS;\n              } else if (PARAM.test(segment)) {\n                  score += DYNAMIC_POINTS;\n              } else if (segment[0] === \"*\") {\n                  score -= SEGMENT_POINTS + SPLAT_PENALTY;\n              } else {\n                  score += STATIC_POINTS;\n              }\n\n              return score;\n          }, 0);\n\n    return { route, score, index };\n};\n/**\n * Give a score to all routes and sort them on that\n * If two routes have the exact same score, we go by index instead\n * @param {object[]} routes\n * @return {object[]}\n */\nconst rankRoutes = (routes) =>\n    routes\n        .map(rankRoute)\n        .sort((a, b) =>\n            a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n        );\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nconst pick = (routes, uri) => {\n    let match;\n    let default_;\n\n    const [uriPathname] = uri.split(\"?\");\n    const uriSegments = segmentize(uriPathname);\n    const isRootUri = uriSegments[0] === \"\";\n    const ranked = rankRoutes(routes);\n\n    for (let i = 0, l = ranked.length; i < l; i++) {\n        const route = ranked[i].route;\n        let missed = false;\n\n        if (route.default) {\n            default_ = {\n                route,\n                params: {},\n                uri,\n            };\n            continue;\n        }\n\n        const routeSegments = segmentize(route.path);\n        const params = {};\n        const max = Math.max(uriSegments.length, routeSegments.length);\n        let index = 0;\n\n        for (; index < max; index++) {\n            const routeSegment = routeSegments[index];\n            const uriSegment = uriSegments[index];\n\n            if (routeSegment && routeSegment[0] === \"*\") {\n                // Hit a splat, just grab the rest, and return a match\n                // uri:   /files/documents/work\n                // route: /files/* or /files/*splatname\n                const splatName =\n                    routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n                params[splatName] = uriSegments\n                    .slice(index)\n                    .map(decodeURIComponent)\n                    .join(\"/\");\n                break;\n            }\n\n            if (typeof uriSegment === \"undefined\") {\n                // URI is shorter than the route, no match\n                // uri:   /users\n                // route: /users/:userId\n                missed = true;\n                break;\n            }\n\n            const dynamicMatch = PARAM.exec(routeSegment);\n\n            if (dynamicMatch && !isRootUri) {\n                const value = decodeURIComponent(uriSegment);\n                params[dynamicMatch[1]] = value;\n            } else if (routeSegment !== uriSegment) {\n                // Current segments don't match, not dynamic, not splat, so no match\n                // uri:   /users/123/settings\n                // route: /users/:id/profile\n                missed = true;\n                break;\n            }\n        }\n\n        if (!missed) {\n            match = {\n                route,\n                params,\n                uri: \"/\" + uriSegments.slice(0, index).join(\"/\"),\n            };\n            break;\n        }\n    }\n\n    return match || default_ || null;\n};\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nconst addQuery = (pathname, query) => pathname + (query ? `?${query}` : \"\");\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nconst resolve = (to, base) => {\n    // /foo/bar, /baz/qux => /foo/bar\n    if (to.startsWith(\"/\")) return to;\n\n    const [toPathname, toQuery] = to.split(\"?\");\n    const [basePathname] = base.split(\"?\");\n    const toSegments = segmentize(toPathname);\n    const baseSegments = segmentize(basePathname);\n\n    // ?a=b, /users?b=c => /users?a=b\n    if (toSegments[0] === \"\") return addQuery(basePathname, toQuery);\n\n    // profile, /users/789 => /users/789/profile\n\n    if (!toSegments[0].startsWith(\".\")) {\n        const pathname = baseSegments.concat(toSegments).join(\"/\");\n        return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n    }\n\n    // ./       , /users/123 => /users/123\n    // ../      , /users/123 => /users\n    // ../..    , /users/123 => /\n    // ../../one, /a/b/c/d   => /a/b/one\n    // .././one , /a/b/c/d   => /a/b/c/one\n    const allSegments = baseSegments.concat(toSegments);\n    const segments = [];\n\n    allSegments.forEach((segment) => {\n        if (segment === \"..\") segments.pop();\n        else if (segment !== \".\") segments.push(segment);\n    });\n\n    return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nconst combinePaths = (basepath, path) =>\n    `${stripSlashes(\n        path === \"/\"\n            ? basepath\n            : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n    )}/`;\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nconst shouldNavigate = (event) =>\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\n// svelte seems to kill anchor.host value in ie11, so fall back to checking href\nconst hostMatches = (anchor) => {\n    const host = location.host;\n    return (\n        anchor.host === host ||\n        anchor.href.indexOf(`https://${host}`) === 0 ||\n        anchor.href.indexOf(`http://${host}`) === 0\n    );\n};\n\nconst canUseDOM = () =>\n    typeof window !== \"undefined\" &&\n    \"document\" in window &&\n    \"location\" in window;\n\nexport {\n    stripSlashes,\n    pick,\n    resolve,\n    combinePaths,\n    shouldNavigate,\n    hostMatches,\n    canUseDOM,\n};\n","<script>\n    import { createEventDispatcher, getContext } from \"svelte\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { resolve, shouldNavigate } from \"./utils.js\";\n\n    export let to = \"#\";\n    export let replace = false;\n    export let state = {};\n    export let getProps = () => ({});\n    export let preserveScroll = false;\n\n    const location = getContext(LOCATION);\n    const { base } = getContext(ROUTER);\n    const { navigate } = getContext(HISTORY);\n    const dispatch = createEventDispatcher();\n\n    let href, isPartiallyCurrent, isCurrent, props;\n    $: href = to === \"/\" ? $base.uri : resolve(to, $base.uri);\n    $: isPartiallyCurrent = $location.pathname.startsWith(href);\n    $: isCurrent = href === $location.pathname;\n    $: ariaCurrent = isCurrent ? \"page\" : undefined;\n    $: props = getProps({\n        location: $location,\n        href,\n        isPartiallyCurrent,\n        isCurrent,\n        existingProps: $$restProps,\n    });\n\n    const onClick = (event) => {\n        dispatch(\"click\", event);\n        if (shouldNavigate(event)) {\n            event.preventDefault();\n            // Don't push another entry to the history stack when the user\n            // clicks on a Link to the page they are currently on.\n            const shouldReplace = $location.pathname === href || replace;\n            navigate(href, { state, replace: shouldReplace, preserveScroll });\n        }\n    };\n</script>\n\n<a\n    {href}\n    aria-current={ariaCurrent}\n    on:click={onClick}\n    {...props}\n    {...$$restProps}\n>\n    <slot active={!!ariaCurrent} />\n</a>\n","<script>\n    import { getContext, onDestroy } from \"svelte\";\n    import { ROUTER } from \"./contexts.js\";\n    import { canUseDOM } from \"./utils.js\";\n\n    export let path = \"\";\n    export let component = null;\n\n    let routeParams = {};\n    let routeProps = {};\n\n    const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\n    const route = {\n        path,\n        // If no path prop is given, this Route will act as the default Route\n        // that is rendered if no other Route in the Router is a match.\n        default: path === \"\",\n    };\n\n    $: if ($activeRoute && $activeRoute.route === route) {\n        routeParams = $activeRoute.params;\n\n        const { component: c, path, ...rest } = $$props;\n        routeProps = rest;\n\n        if (c) {\n            if (c.toString().startsWith(\"class \")) component = c;\n            else component = c();\n        }\n\n        canUseDOM() && !$activeRoute.preserveScroll && window?.scrollTo(0, 0);\n    }\n\n    registerRoute(route);\n\n    onDestroy(() => {\n        unregisterRoute(route);\n    });\n</script>\n\n{#if $activeRoute && $activeRoute.route === route}\n    {#if component}\n        {#await component then resolvedComponent}\n            <svelte:component\n                this={resolvedComponent?.default || resolvedComponent}\n                {...routeParams}\n                {...routeProps}\n            />\n        {/await}\n    {:else}\n        <slot params={routeParams} />\n    {/if}\n{/if}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\nimport { canUseDOM } from \"./utils\";\n\nconst getLocation = (source) => {\n    return {\n        ...source.location,\n        state: source.history.state,\n        key: (source.history.state && source.history.state.key) || \"initial\",\n    };\n};\nconst createHistory = (source) => {\n    const listeners = [];\n    let location = getLocation(source);\n\n    return {\n        get location() {\n            return location;\n        },\n\n        listen(listener) {\n            listeners.push(listener);\n\n            const popstateListener = () => {\n                location = getLocation(source);\n                listener({ location, action: \"POP\" });\n            };\n\n            source.addEventListener(\"popstate\", popstateListener);\n\n            return () => {\n                source.removeEventListener(\"popstate\", popstateListener);\n                const index = listeners.indexOf(listener);\n                listeners.splice(index, 1);\n            };\n        },\n\n        navigate(to, { state, replace = false, preserveScroll = false } = {}) {\n            state = { ...state, key: Date.now() + \"\" };\n            // try...catch iOS Safari limits to 100 pushState calls\n            try {\n                if (replace) source.history.replaceState(state, \"\", to);\n                else source.history.pushState(state, \"\", to);\n            } catch (e) {\n                source.location[replace ? \"replace\" : \"assign\"](to);\n            }\n            location = getLocation(source);\n            listeners.forEach((listener) =>\n                listener({ location, action: \"PUSH\", preserveScroll })\n            );\n            document.activeElement.blur();\n        },\n    };\n};\n// Stores history entries in memory for testing or other platforms like Native\nconst createMemorySource = (initialPathname = \"/\") => {\n    let index = 0;\n    const stack = [{ pathname: initialPathname, search: \"\" }];\n    const states = [];\n\n    return {\n        get location() {\n            return stack[index];\n        },\n        addEventListener(name, fn) {},\n        removeEventListener(name, fn) {},\n        history: {\n            get entries() {\n                return stack;\n            },\n            get index() {\n                return index;\n            },\n            get state() {\n                return states[index];\n            },\n            pushState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                index++;\n                stack.push({ pathname, search });\n                states.push(state);\n            },\n            replaceState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                stack[index] = { pathname, search };\n                states[index] = state;\n            },\n        },\n    };\n};\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst globalHistory = createHistory(\n    canUseDOM() ? window : createMemorySource()\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","<script>\n    import { getContext, onMount, setContext } from \"svelte\";\n    import { derived, writable } from \"svelte/store\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { globalHistory } from \"./history.js\";\n    import { combinePaths, pick } from \"./utils.js\";\n\n    export let basepath = \"/\";\n    export let url = null;\n    export let viewtransition = null;\n    export let history = globalHistory;\n\n    const viewtransitionFn = (node, _, direction) => {\n        const vt = viewtransition(direction);\n        if (typeof vt?.fn === \"function\") return vt.fn(node, vt);\n        else return vt;\n    };\n\n    setContext(HISTORY, history);\n\n    const locationContext = getContext(LOCATION);\n    const routerContext = getContext(ROUTER);\n\n    const routes = writable([]);\n    const activeRoute = writable(null);\n    let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n    // If locationContext is not set, this is the topmost Router in the tree.\n    // If the `url` prop is given we force the location to it.\n    const location =\n        locationContext || writable(url ? { pathname: url } : history.location);\n\n    // If routerContext is set, the routerBase of the parent Router\n    // will be the base for this Router's descendants.\n    // If routerContext is not set, the path and resolved uri will both\n    // have the value of the basepath prop.\n    const base = routerContext\n        ? routerContext.routerBase\n        : writable({\n              path: basepath,\n              uri: basepath,\n          });\n\n    const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n        // If there is no activeRoute, the routerBase will be identical to the base.\n        if (!activeRoute) return base;\n\n        const { path: basepath } = base;\n        const { route, uri } = activeRoute;\n        // Remove the potential /* or /*splatname from\n        // the end of the child Routes relative paths.\n        const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n        return { path, uri };\n    });\n\n    const registerRoute = (route) => {\n        const { path: basepath } = $base;\n        let { path } = route;\n\n        // We store the original path in the _path property so we can reuse\n        // it when the basepath changes. The only thing that matters is that\n        // the route reference is intact, so mutation is fine.\n        route._path = path;\n        route.path = combinePaths(basepath, path);\n\n        if (typeof window === \"undefined\") {\n            // In SSR we should set the activeRoute immediately if it is a match.\n            // If there are more Routes being registered after a match is found,\n            // we just skip them.\n            if (hasActiveRoute) return;\n\n            const matchingRoute = pick([route], $location.pathname);\n\n            if (matchingRoute) {\n                activeRoute.set(matchingRoute);\n                hasActiveRoute = true;\n            }\n        } else {\n            routes.update((rs) => [...rs, route]);\n        }\n    };\n\n    const unregisterRoute = (route) => {\n        routes.update((rs) => rs.filter((r) => r !== route));\n    };\n\n    let preserveScroll = false;\n\n    // This reactive statement will update all the Routes' path when\n    // the basepath changes.\n    $: {\n        const { path: basepath } = $base;\n        routes.update((rs) =>\n            rs.map((r) =>\n                Object.assign(r, { path: combinePaths(basepath, r._path) })\n            )\n        );\n    }\n    // This reactive statement will be run when the Router is created\n    // when there are no Routes and then again the following tick, so it\n    // will not find an active Route in SSR and in the browser it will only\n    // pick an active Route after all Routes have been registered.\n    $: {\n        const bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch ? {...bestMatch, preserveScroll} : bestMatch);\n    }\n\n    if (!locationContext) {\n        // The topmost Router in the tree is responsible for updating\n        // the location store and supplying it through context.\n        onMount(() => {\n            const unlisten = history.listen((event) => {\n                preserveScroll = event.preserveScroll || false;\n                location.set(event.location);\n            });\n\n            return unlisten;\n        });\n\n        setContext(LOCATION, location);\n    }\n\n    setContext(ROUTER, {\n        activeRoute,\n        base,\n        routerBase,\n        registerRoute,\n        unregisterRoute,\n    });\n</script>\n\n{#if viewtransition}\n    {#key $location.pathname}\n        <div in:viewtransitionFn out:viewtransitionFn>\n            <slot\n                route={$activeRoute && $activeRoute.uri}\n                location={$location}\n            />\n        </div>\n    {/key}\n{:else}\n    <slot route={$activeRoute && $activeRoute.uri} location={$location} />\n{/if}\n","import { writable } from 'svelte/store';\n\nexport const isAuthenticated = writable(false);","<script lang=\"ts\">\n    import { Link } from \"svelte-routing\";\n    import { isAuthenticated } from \"../stores/isAuthenticatedStore\";\n    let logoutUrl = `${window.location.origin}/accounts/logout`;\n    \n\n</script>\n\n<nav>\n  <!-- Shared navigation items -->\n  <Link to=\"\">Home</Link>\n  <Link to=\"/about\">About</Link>\n  <Link to=\"/open-funding-calls\">Open Funding Calls</Link>\n  {#if $isAuthenticated}\n    <!-- Items shown when the user is signed in -->\n    <a href={logoutUrl}>Log Out</a>\n  {:else}\n    <!-- Items shown when the user is not signed in -->\n    <Link to=\"/login\">Log In</Link>\n    <Link to=\"/signup\">Register</Link>\n  {/if}\n</nav>\n\n<style>\n    nav {\n        background-color: #333;\n        color: white;\n        font-size: 1em;\n        text-align: right;\n        width: 100%;\n        margin-top: 1.25em;\n    }\n</style>","<script lang=\"ts\">\n    import Navbar from \"./Navbar.svelte\";\n</script>\n\n<style>\n    .title {\n        background-color: #333;\n        color: white;\n        padding: 0rem;\n        font-size: 1em;\n        text-align: left;\n        width: 100%;\n        margin-top: 1.25em;\n    }\n\n    .logo {\n        background-color: green;\n        height: 25%;\n    }\n    header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        /* Additional styling */\n    }\n</style>\n\n<header>\n    <div class=\"logo\"></div>\n    <div class=\"title\">TokenShare Portal</div>\n    <Navbar />\n</header>","<script>\n    import { Link } from \"svelte-routing\";\n\n</script>\n\n<div class=\"sidebar-container\">\n    <div class=\"sidebar-top\">\n        <Link to=\"/app/dashboard\">Dashboard</Link>\n        <Link to=\"/app/workspaces\">Workspaces</Link>\n        <Link to=\"/app/messages\">Messages</Link>\n    </div>\n    <div class=\"sidebar-bottom\">\n        <Link to=\"/app/profile\">Profile</Link>\n        <Link to=\"/app/settings\">Settings</Link>\n    </div>\n</div>\n\n<style>\n    .sidebar-container {\n        min-height: 100%;\n        min-height: 100dvh;\n        width: 15dvw;\n    }\n\n    .sidebar-top {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .sidebar-bottom {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n</style>","<h1>User Profile</h1>","// userSession.js\nimport { writable } from 'svelte/store';\nimport type { UserProps } from '../types/userProps';\n\nexport const userData = writable<UserProps | null>(null);","<script lang=\"ts\">\n  let count: number = 0\n  const increment = () => {\n    count += 1\n  }\n</script>\n\n<button on:click={increment}>\n  count is {count}\n</button>\n","<script lang=\"ts\">\n    console.log(\"Dashboard component is being initialized\");\n    import { onMount } from \"svelte\";\n    import { userData } from \"../stores/userDataStore\";\n    \n    import Counter from \"../lib/Counter.svelte\";\n\n    \n    console.log(\"Username:\", $userData);\n    \n    let apimessage = \"waiting for server...\";\n\n    onMount(async () => {\n        let res = await fetch(\"/api/greet\").then((res) => res.json());\n        console.log(res);\n        apimessage = JSON.stringify(res);\n    });\n</script>\n\n\n<div class=\"content-container\">\n    <!-- signed-in user content -->\n    <h4>Hello {$userData?.username}!</h4>\n    <h1>Welcome to your dashboard.</h1>\n    To manage your companies or create one, navigate to your Workspaces\n    <br>\n    <div class=\"card\">\n        <Counter />\n    </div>\n    \n\n    <h3>Data from server</h3>\n    {apimessage}\n</div>\n\n<style>\n    \n    \n    .content-container {\n        display: flex;\n        flex-direction: column;\n    }\n    .content-container {\n        flex: 1;\n    }  \n\n\n</style>","<h1>Workspaces</h1>","<script>\n\n    \n\n    export let read = false;\n\n</script>\n\n<div class={read ? \"email-element read\" : \"email-element unread text-muted\"}>\n    <div class=\"msg-content\">\n        \n        <slot name=\"pre_description\"/>\n        {#if $$slots.sender}\n            <slot name=\"sender\"/>\n        {/if}\n        {#if $$slots.recipients}\n            <slot name=\"recipients\"/>\n        {/if}\n    \n        <slot name=\"subject\"/>\n    \n        <slot name=\"timestamp\" class=\"date\"/>\n        \n    </div>\n</div>\n\n<style>\n    .email-element {\n        border: solid 3px;\n        margin: 10px;\n    }\n    .read {\n        background-color: \"grey\";\n        color: black;\n    }\n    .unread {\n        background-color: \"white\";\n    }\n    .msg-content {\n        padding: 10px;\n    }\n    .date {\n        float: right;\n        \n    }\n</style>","<script lang=\"ts\">\n\n    import { userData } from \"../stores/userDataStore\";\n\n    export let onMessageSent: (view: string) => void;\n\n    let recipients = '';\n    let subject = '';\n    let body = '';\n    let username = $userData?.username;\n\n\n    // SendEmail\n    async function sendMessage() {\n        const sending = await fetch('/user_comms/send_msg', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                recipients: recipients,\n                subject: subject,\n                body: body\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            console.log({result});\n        })\n        .then(() => {\n            onMessageSent('sent');\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n\n    }\n</script>\n\n<h2>Compose your message</h2>\n\n<div id=\"compose-view\">\n    <h3>New Message</h3>\n    <form id=\"compose-form\" on:submit|preventDefault={sendMessage}>\n        <div class=\"form-group\">\n            From: <input disabled class=\"form-control\" bind:value={username}>\n        </div>\n        <div class=\"form-group\">\n            To: <input bind:value={recipients} class=\"form-control\" placeholder=\"Recipients\">\n        </div>\n        <div class=\"form-group\">\n            <input bind:value={subject} class=\"form-control\" placeholder=\"Subject\">\n        </div>\n        <textarea bind:value={body} class=\"form-control\" placeholder=\"Your Message Here\"></textarea>\n        <input type=\"submit\" class=\"btn btn-primary\" value=\"Send\" id=\"send-email\" disabled={!$userData || !$userData.username}/>\n    </form>\n</div>","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import MsgInMailbox from '../components/MsgInMailbox.svelte';\n    import ComposeMsg from '../components/ComposeMsg.svelte';\n\n    import type { Email } from '../types/email';\n\n    import { userData } from \"../stores/userDataStore\";\n  \n    //let emails: Email | any = [];\n\n    let currentView: string = 'inbox';\n\n    let recipients = '';\n    let subject = '';\n    let body = '';\n    let username = $userData?.username;\n  \n    onMount(async () => {\n        displayMessageHubView('inbox');\n    });\n  \n    \n    async function displayMessageHubView(view:string) {\n        // render currentView in the component according to view\n        currentView = view;\n    }\n    \n    async function loadMailbox(selectedMailbox: string) {\n      const response = await fetch(`/user_comms/message_hub/${selectedMailbox}`);\n      const emails = await response.json();\n      return emails;\n    }\n\n    \n\n    function readEmail() {\n            // TODO\n    }\n\n    // TODO make MsgInMailbox clickable toggling read/unread\n    \n</script>\n\n<h1>Messages</h1>\n\n<div class=\"msg-controls\">\n    <button id=\"inbox-btn\" on:click={() => displayMessageHubView('inbox')}>Inbox</button>\n    <button id=\"compose-btn\" on:click={() => displayMessageHubView('compose')}>New Message</button>\n    <button id=\"sent-btn\" on:click={() => displayMessageHubView('sent')}>Sent</button>\n    <button id=\"archived-btn\" on:click={() => displayMessageHubView('archived')}>Archived</button>\n</div>\n\n\n{#if currentView === 'inbox'}\n    <h2>Inbox</h2>\n    {#await loadMailbox('inbox')}\n        <p>Loading inbox data...</p>\n    {:then emails} \n        {#each emails as email}\n            <MsgInMailbox>\n                <span class=\"pre_description\" slot=\"pre_description\">\n                    Received from:\n                </span>\n                <div class=\"sender\" slot=\"sender\">\n                        {email.sender}\n                </div>\n                <div class=\"subject\" slot=\"subject\">\n                    Subject: {email.subject}\n                </div>\n                <div class=\"date\" slot=\"timestamp\">\n                    Date: {email.timestamp}\n                </div>\n            </MsgInMailbox>          \n\n        {/each}\n    {:catch error}\n        <p>Error loading inbox: {error.message}</p>\n    {/await}\n{:else if currentView === 'sent'}\n    <h2>Sent</h2>\n    {#await loadMailbox('sent')}\n        <p>Loading sentbox data...</p>\n    {:then emails}\n        {#each emails as email}\n            <MsgInMailbox>\n                <span class=\"pre_description\" slot=\"pre_description\">\n                    Sent to:\n                </span>\n                <div class=\"recipients\" slot=\"recipients\">\n                    {#each email.recipients as recipient}\n                        {recipient}\n                    {/each}\n                </div>\n                <div class=\"subject\" slot=\"subject\">\n                    Subject: {email.subject}\n                </div>\n                <div class=\"date\" slot=\"timestamp\">\n                    Date: {email.timestamp}\n                </div>\n            </MsgInMailbox>          \n        {/each}\n    {:catch error}\n        <p>Error loading sentbox: {error.message}</p>\n    {/await}\n{:else if currentView === 'compose'}\n   <ComposeMsg onMessageSent={displayMessageHubView}/>\n{:else if currentView === 'archive'}\n    <h2>Archive</h2>\n{/if}\n\n","<h1>Settings</h1>","<script lang=\"ts\">\n    \n    import { isAuthenticated } from \"../stores/isAuthenticatedStore\";\n</script>\n\n<div class=\"content-container-no-signin\">\n    <h2>Welcome to TokenShare portal</h2>\n    <h3>You are signed in? {$isAuthenticated}</h3>\n    <p>Tokenshare enables digitization of all governance operations of your company.</p>\n    <p>\n        This means, you can issue shares, transfer share ownership, hold shareholder meetings and vote on decisions.\n        Any official documents (such as Articles of Association) can be independently validated through cryptographic hashing on the blockchain.\n        <br>\n        Voting results in legally binding decisions.\n\n        Additionally, you can own shares of other companies through Tokenshare wallet contract. \n        Owning shares gives your voting rights as per the Articles of Association of each company\n    </p>\n    <p>Please Sign In or Register to continue.</p>\n</div>","<style>\n    footer {\n        background-color: #333;\n        color: white;\n        padding: 0rem;\n        font-size: 1em;\n        text-align: center;\n        width: 100%;\n    }\n</style>\n\n<footer class=\"footer\">\n    <!-- Copyright -->\n    <p>&copy; 2023 Tokenshare | Reset Consulting. All rights reserved.</p>\n</footer>","<script lang=\"ts\">\n    import { onMount } from \"svelte\";\n    import { navigate } from \"svelte-routing\";\n    import { isAuthenticated } from \"../stores/isAuthenticatedStore\";\n\n    let username: string | any = '';\n    let password: string | any = '';\n    let errorMessage: string | any = '';\n    \n    let csrfToken: string | any;\n    \n\n    onMount(async () => {\n        csrfToken = getCookie('csrftoken');\n    });\n\n    async function login() {\n      try {\n        const response = await fetch('/api/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfToken\n            },\n            body: JSON.stringify({ username, password })\n        });\n        \n        const data = await response.json();\n\n        if (!response.ok) {\n            errorMessage = data.message;\n            throw new Error(errorMessage);\n        };\n\n        // Update the isAuthenticated state.\n        isAuthenticated.set(data.is_authenticated);\n        navigate(\"/app/dashboard\", { replace: true });\n\n      } catch (error) {\n        console.error('Login unsuccessful in catch:', error);\n        errorMessage = (error as Error).message;\n        throw error;\n      }\n    }\n\n    function getCookie(name: string) {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n  </script>\n  \n  <form on:submit|preventDefault={login}>\n    <input type=\"text\" bind:value={username} placeholder=\"Username\">\n    <input type=\"password\" bind:value={password} placeholder=\"Password\">\n    <input type='hidden' name='csrfmiddlewaretoken' value={csrfToken}>\n    <button type=\"submit\">Login</button>\n    {#if errorMessage}\n      <p>{errorMessage}</p>\n    {/if}\n  </form>\n  ","<h2>Register</h2>","<script lang=\"ts\">\n\n    import { Router, Route } from \"svelte-routing\";\n    import { onMount } from \"svelte\";\n\n\n    // Component imports\n    ////////////////////\n    import Header from \"./components/Header.svelte\";\n    //import Navbar from \"./components/Navbar.svelte\";\n    import Sidebar from \"./components/Sidebar.svelte\";\n    import Profile from \"./content/Profile.svelte\";\n    import Dashboard from \"./content/Dashboard.svelte\";\n    import Workspaces from \"./content/Workspaces.svelte\";\n    import Messages from \"./content/Messages.svelte\";\n    import Settings from \"./content/Settings.svelte\";\n    import NoSignInIndex from \"./content/NoSignInIndex.svelte\";\n    //import AuthContent from \"./components/AuthContent.svelte\";\n    //import MainLayout from \"./layout/MainLayout.svelte\";\n    import Footer from \"./components/Footer.svelte\";\n    import Login from \"./content/Login.svelte\";\n    import Register from \"./content/Register.svelte\";\n\n    // Type imports\n    import type { UserProps } from './types/userProps';\n\n    // Store imports\n    import { isAuthenticated } from \"./stores/isAuthenticatedStore\";\n    import { userData } from \"./stores/userDataStore\";\n    \n\n    let apimessage = \"waiting for server...\";\n     \n\n    console.log(\"This is before the onMount\");\n    console.log($isAuthenticated);\n    console.log(\"--------------\");\n    onMount(async () => {\n                        \n        // since Login.svelte already updates $isAuthenticated, this check here is not needed\n        checkAuthentication()\n        .then(res => {\n            isAuthenticated.set(res.isAuthenticated);\n            console.log(\"inside onMount, after checkAuthentication .then\");\n            console.log($isAuthenticated);\n        })\n    \n    });\n\n    let userDataAvailable: boolean = false;\n    \n    isAuthenticated.subscribe(value => {\n        if (value) {\n            fetchUserProps()\n            .then(userProps => {\n                userData.set(userProps);\n                userDataAvailable = true;\n            })\n            .then(() => {\n                console.log(\"userData store updated\");\n                console.log($userData);\n            })\n            .catch(error => {\n                console.error(\"Error fetching user data:\", error);\n                // Handle the error appropriately\n            });\n        }\n    })\n    /*\n    \n    $: if ($isAuthenticated) {\n        fetchUserProps()\n        .then(userProps => {\n            userData.set(userProps);\n        })\n        .then(() => {\n            console.log(\"userData store updated\");\n            console.log($userData);\n        })\n        .catch(error => {\n            console.error(\"Error fetching user data:\", error);\n            // Handle the error appropriately\n        });\n    }\n    \n    */\n\n    // Function to check authentication\n    async function checkAuthentication() {\n        try {\n            console.log(\"Fetching check-auth data\");\n            let res = await fetch('/api/check-auth/');\n\n            // Check if the fetch request was successful\n            if (!res.ok) {\n                throw new Error(`HTTP error! status: ${res.status}`);\n            }\n\n            let data = await res.json();\n            console.log(\"Got the check-auth data from server\");\n\n            let isAuthenticated = data.is_authenticated;\n            let authMessage = \"\";\n\n            if (isAuthenticated) {\n                authMessage += \"User is authenticated. \";\n                authMessage += \"Auth check performed successfully. \";\n            } else {\n                authMessage += \"User is not authenticated. \";\n                authMessage += \"Auth check performed successfully. \";\n            };\n\n            return { isAuthenticated, \"message\": authMessage };\n        } catch (error) {\n            // Handle any errors that occurred during fetch or JSON parsing\n            console.error(\"Error in authentication check:\", error);\n            return { isAuthenticated: false, message: \"Failed to perform auth check due to an error.\" };\n        }\n    }\n\n    // Function to fetch authenticated user data\n    async function fetchUserProps() {\n        try {\n            let res = await fetch(\"/api/auth-user\");\n            if (!res.ok) {\n                throw new Error(\"Network response was not ok\");\n            }\n            let data = await res.json();\n            console.log(data);\n\n            const userProps = {\n                pk: data.userData.pk,\n                username: data.userData.username,\n                email: data.userData.email,\n                first_name: data.userData.first_name,\n                last_name: data.userData.last_name\n            };\n            console.log(userProps.username);\n            //userData.set(userProps);\n            return userProps;\n        } catch (error) {\n            console.error('Unauthenticated user session:', error);\n            throw error; // Re-throw the error to handle it in the calling context\n        }\n    }\n\n\n    \n</script>\n\n\n<Router>\n    <Header />\n    <main class={$isAuthenticated ? \"grid-main with-sidebar\" : \"grid-main no-sidebar\"}>\n\n        \n        {#if $isAuthenticated}\n            {#await userDataAvailable}\n                <!-- Loading state -->\n                <p>Loading user data...</p>\n            {:then}\n                <!-- Success state -->\n                <Sidebar />\n                <Route path=\"\" component={Dashboard} />\n                <Route path=\"/app/dashboard\" component={Dashboard} />\n                <Route path=\"/app/workspaces\">\n                    <Workspaces />\n                </Route>\n                <Route path=\"/app/messages\" component={Messages} />\n                <Route path=\"/app/profile\" component={Profile} />\n                <Route path=\"/app/settings\" component={Settings} />\n            {:catch error}\n                <!-- Error state -->\n                <p>Error loading user data: {error.message}</p>\n            {/await}\n        {:else}\n            <Route path=\"\" component={NoSignInIndex} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Register} />\n        {/if}\n    \n    </main>\n</Router>\n\n<Footer />\n\n\n<style>\n    main {\n        display: flex;\n        flex-direction: row;\n    }\n</style>\n","import './app.css'\nimport App from './App.svelte'\n\nconst app = new App({\n  target: document.getElementById('app'),\n})\n\nexport default app\n"],"names":["noop","identity","x","assign","tar","src","k","is_promise","value","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","i","exclude_internal_props","props","result","compute_rest_props","keys","rest","compute_slots","slots","key","null_to_empty","is_client","now","raf","cb","tasks","run_tasks","task","loop","fulfill","append","target","node","get_root_for_style","root","append_empty_stylesheet","style_element","element","append_stylesheet","style","insert","anchor","detach","destroy_each","iterations","detaching","name","text","data","space","empty","listen","event","handler","options","prevent_default","attr","attribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","children","set_data","set_input_value","input","custom_event","type","detail","bubbles","cancelable","construct_svelte_component","managed_styles","active","hash","str","create_style_information","doc","info","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","stylesheet","rules","animation","delete_rule","previous","next","anim","deleted","clear_rules","ownerNode","current_component","set_current_component","get_current_component","onMount","onDestroy","createEventDispatcher","setContext","context","getContext","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","promise","wait","dispatch","direction","kind","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","null_transition","create_in_transition","params","config","running","animation_name","cleanup","go","easing","linear","tick","css","start_time","end_time","started","create_out_transition","group","original_inert_value","reset","handle_promise","token","index","child_ctx","needs_flush","error","update_await_block_branch","resolved","ensure_array_like","array_like_or_iterator","get_spread_update","levels","updates","to_null_out","accounted_for","o","n","get_spread_object","spread_props","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","append_styles","parent_component","ready","ret","nodes","SvelteComponent","__publicField","PUBLIC_VERSION","LOCATION","ROUTER","HISTORY","PARAM","SEGMENT_POINTS","STATIC_POINTS","DYNAMIC_POINTS","SPLAT_PENALTY","ROOT_POINTS","segmentize","uri","stripSlashes","string","rankRoute","route","score","segment","rankRoutes","routes","pick","match","default_","uriPathname","uriSegments","isRootUri","ranked","l","missed","routeSegments","max","routeSegment","uriSegment","splatName","dynamicMatch","addQuery","pathname","query","resolve","to","base","toPathname","toQuery","basePathname","toSegments","baseSegments","allSegments","segments","combinePaths","basepath","path","shouldNavigate","canUseDOM","$$props","replace","state","getProps","preserveScroll","location","navigate","href","isPartiallyCurrent","isCurrent","onClick","shouldReplace","$location","$base","$$invalidate","ariaCurrent","$$restProps","switch_instance_spread_levels","_a","if_block","create_if_block","routeParams","routeProps","registerRoute","unregisterRoute","activeRoute","$activeRoute","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","derived","stores","initial_value","single","stores_array","auto","values","pending","sync","unsubscribers","getLocation","source","createHistory","listeners","listener","popstateListener","createMemorySource","initialPathname","stack","states","_","search","globalHistory","previous_key","div","url","viewtransition","history","viewtransitionFn","vt","locationContext","routerContext","hasActiveRoute","routerBase","matchingRoute","rs","r","bestMatch","$routes","isAuthenticated","nav","logoutUrl","header","div0","div1","div2","h1","userData","button","count","t1_value","h4","br","h3","current","t1","$userData","apimessage","res","if_block0","create_if_block_1","if_block1","read","h2","div3","form","input0","input1","input2","textarea","input3","onMessageSent","recipients","subject","body","username","sendMessage","response","loadMailbox","each_blocks","span","each_value_2","button0","button1","button2","button3","selectedMailbox","currentView","displayMessageHubView","view","p0","p1","p2","footer","getCookie","cookieValue","cookies","cookie","password","errorMessage","csrfToken","login","NoSignInIndex","Login","Register","Dashboard","Messages","Profile","Settings","main","checkAuthentication","authMessage","fetchUserProps","userProps","$isAuthenticated","userDataAvailable","App"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}